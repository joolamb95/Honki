<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="finance">

 	<!-- 전체 지출 내역의 월 정보 가져오기 -->
	<select id="getExpends" resultType="expend">
		SELECT * FROM EXPENDS
		WHERE TO_CHAR(EXPEND_DATE, 'YYYY-MM') = #{yearMonth}
		AND STATUS = 'N'
		ORDER BY EXPEND_DATE DESC
	</select>
		
	<!-- 특정 월의 지출 내역 조회 -->
	<select id="getExpendsMonths" resultType="string">
    	SELECT DISTINCT TO_CHAR(EXPEND_DATE, 'YYYY-MM') AS yearMonth FROM EXPENDS ORDER BY 1 DESC
	</select>
		
	<!-- 새로운 지출 내역 추가 -->
    <insert id="insertExpend">
        INSERT INTO EXPENDS (EXPEND_NO,CATEGORY, AMOUNT, DESCRIPTION, EXPEND_DATE, STATUS)
        VALUES (SEQ_EXPEND_NO.NEXTVAL, #{category}, #{amount}, #{description}, #{expendDate}, 'N')
    </insert>

    <!-- 기존 지출 내역 수정 -->
    <update id="updateExpend">
        UPDATE EXPENDS
        SET CATEGORY = #{category},
            AMOUNT = #{amount},
            DESCRIPTION = #{description},
            EXPEND_DATE = #{expendDate}
        WHERE EXPEND_NO = #{expendNo}
    </update>
    
	<!-- 특정 지출 내역 삭제 (STATUS='Y'로 변경하여 소프트 삭제) -->
    <update id="deleteExpend">
        UPDATE EXPENDS
        SET STATUS = 'Y'
        WHERE EXPEND_NO = #{id}
    </update>
    
    <!-- 월별 매출 데이터 조회 -->
    <select id="getMonthlySales" resultType="map">
		SELECT 
		    TO_CHAR(P.CREATE_DATE, 'YYYY-MM-DD') AS "date", 
		    SUM(P.AMOUNT) AS sales
		FROM PAYMENT P
		WHERE TO_CHAR(P.CREATE_DATE, 'YYYY-MM') = #{yearMonth}
		GROUP BY TO_CHAR(P.CREATE_DATE, 'YYYY-MM-DD')
		ORDER BY TO_CHAR(P.CREATE_DATE, 'YYYY-MM-DD') ASC
    </select>
    
	<!-- 주별 매출 데이터 조회 -->
	<select id="getWeeklySales" resultType="map">
    SELECT
        TO_CHAR(TRUNC(O.ORDER_DATE), 'YYYY-MM-DD') AS ORDER_DATE,
        TO_CHAR(O.ORDER_DATE, 'D') AS DAY,
        TO_CHAR(O.ORDER_DATE, 'DY', 'NLS_DATE_LANGUAGE=KOREAN') AS DAY_LABEL,
        CASE 
            WHEN TO_NUMBER(TO_CHAR(O.ORDER_DATE, 'HH24')) BETWEEN 0 AND 11 THEN 'morningSales'
            WHEN TO_NUMBER(TO_CHAR(O.ORDER_DATE, 'HH24')) BETWEEN 12 AND 23 THEN 'afternoonSales'
        END AS TIME_PERIOD,
        SUM(O.TOTAL_PRICE) AS SALES
    FROM ORDERS O
    WHERE TRUNC(O.ORDER_DATE) &gt;= TRUNC(SYSDATE) - (TO_CHAR(SYSDATE, 'D') - 2) -- 이번 주 월요일S
      AND TRUNC(O.ORDER_DATE) &lt; TRUNC(SYSDATE) - (TO_CHAR(SYSDATE, 'D') - 2) + NUMTODSINTERVAL(7, 'DAY') -- 이번 주 일요일
    GROUP BY
        TO_CHAR(TRUNC(O.ORDER_DATE), 'YYYY-MM-DD'),
        TO_CHAR(O.ORDER_DATE, 'D'),
        TO_CHAR(O.ORDER_DATE, 'DY', 'NLS_DATE_LANGUAGE=KOREAN'),
        CASE 
            WHEN TO_NUMBER(TO_CHAR(O.ORDER_DATE, 'HH24')) BETWEEN 0 AND 11 THEN 'morningSales'
            WHEN TO_NUMBER(TO_CHAR(O.ORDER_DATE, 'HH24')) BETWEEN 12 AND 23 THEN 'afternoonSales'
        END
    ORDER BY ORDER_DATE
	</select>

    <!-- 인기 메뉴 Top 3 조회 -->
	<select id="getTopMenus" resultType="map">
		SELECT 
		    CASE 
		        WHEN C.CATEGORY_NAME = '주류' THEN '주류'
		        WHEN C.CATEGORY_NAME = '음료' THEN '논알콜'
		        ELSE '안주류'
		    END AS category,
		    M.MENU_NO AS id,  
		    M.MENU_NAME AS name, 
		    NVL(COUNT(OD.MENU_NO), 0) AS orders
		FROM ORDERS_DETAIL OD
		JOIN MENU M ON OD.MENU_NO = M.MENU_NO
		JOIN CATEGORY C ON M.CATEGORY_NO = C.CATEGORY_NO
		GROUP BY C.CATEGORY_NAME, M.MENU_NO, M.MENU_NAME
		ORDER BY category, orders DESC
	</select>
	
	<!-- 대시보드 총 지출금액 가져오기 -->
	<select id="getTotalExpends" resultType="int">
	SELECT COALESCE(SUM(AMOUNT),0) FROM EXPENDS WHERE TO_CHAR(EXPEND_DATE, 'DD/MM/YY') = TO_CHAR(SYSDATE, 'DD/MM/YY')
	AND STATUS = 'N'
	</select>
	
	<!-- 대시보드 최근 6개월 지출내역 가져오기 -->
	<select id="getMonthlyExpenses" resultType="map">
	SELECT 
		TO_CHAR(EXPEND_DATE, 'YYYY-MM') AS MONTH, 
		COALESCE(SUM(AMOUNT), 0) AS TOTAL_EXPEND 
	FROM EXPENDS WHERE EXPEND_DATE >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -5) 
	GROUP BY TO_CHAR(EXPEND_DATE, 'YYYY-MM') 
	ORDER BY MONTH
	</select>
	
</mapper>








